Server listening at http://localhost:3001


  Test internalOrder APIs
    √ Deleting all internal orders (Not official API)
    1) POST /api/internalOrders
    2) POST /api/internalOrders
    3) POST /api/internalOrders
    √ POST /api/internalOrders
    4) POST /api/internalOrders
    √ POST /api/internalOrders
    √ POST /api/internalOrders
    √ POST /api/internalOrders
    √ POST /api/internalOrders
    √ POST /api/internalOrders
    √ POST /api/internalOrders
    √ POST /api/internalOrders
    √ PUT /api/internalOrders/:id
    √ PUT /api/internalOrders/:id
    5) PUT /api/internalOrders/:id
    √ PUT /api/internalOrders/:id
    √ PUT /api/internalOrders/:id
    √ PUT /api/internalOrders/:id
    √ PUT /api/internalOrders/:id
    √ PUT /api/internalOrders/:id
    √ GET /api/internalOrders
    √ GET /api/internalOrdersIssued
    √ GET /api/internalOrdersAccepted
    √ GET /api/internalOrders/:id
    √ GET /api/internalOrders/:id
    √ GET /api/internalOrders/:id
    √ DELETE /api/internalOrders/:id
    √ DELETE /api/internalOrders/:id
    √ DELETE /api/internalOrders/:id
    √ DELETE /api/internalOrders/:id
    √ DELETE /api/internalOrders/:id
    √ DELETE /api/internalOrders/:id
    √ GET /api/internalOrders
    √ GET /api/internalOrdersIssued
    √ GET /api/internalOrdersAccepted

  test Items apis
    √ Dropping table
    √ Adding a new item
    √ Adding a new item
    √ Adding a new item
    √ Get a all items
    √ Get an item
    √ Get an item
    √ Get an item
    √ Modifying an item
    √ Modifying an item
    √ Modifying an item

  Test Positions APIs
    √ Deleting data (Not official API)
    √ POST /api/position
    √ POST /api/position
    √ POST /api/position
    √ POST /api/position
    √ POST /api/position
    √ POST /api/position
    √ POST /api/position
    √ PUT /api/position/:positionID
    √ PUT /api/position/:positionID
    √ PUT /api/position/:positionID
    √ PUT /api/position/:positionID
    √ PUT /api/position/:positionID
    √ PUT /api/position/:positionID
    √ PUT /api/position/:positionID/changeID
    √ PUT /api/position/:positionID/changeID
    √ PUT /api/position/:positionID/changeID
    √ GET /api/positions
    √ DELETE /api/position/:positionID
    √ DELETE /api/position/:positionID
    √ GET /api/positions

  test restock order apis
    √ Dropping table
    √ Adding a new item
    √ Dropping table
    √ Adding a new restock order
    √ Adding a new restock order
    √ Adding a new restock order
    √ Adding a new restock order
    √ Adding a new restock order
    √ Adding a new restock order
    √ Adding a new restock order
    √ Get all issued restock orders
    √ Get a restock order (by id)
    √ Get a restock order (by id)
    √ Get a restock order (by id)
    √ Updating the state of a restock order
    √ Updating the state of a restock order
    √ Updating the state of a restock order
    √ Updating the state of a restock order
    √ Updating the state of a restock order
    √ Update skuItems of a restock order
    √ Updating the state of a restock order
    √ Update skuItems of a restock order
    √ Update skuItems of a restock order
    √ Update skuItems of a restock order
    √ Updating the state of a restock order
    √ Update transportNote of a restock order
    √ Updating the state of a restock order
    √ Update transportNote of a restock order
    √ Update transportNote of a restock order
    √ Update transportNote of a restock order
    √ Delete restock order
    √ Delete restock order
    √ Delete restock order
    √ Dropping table
    √ Adding a new restock order
    √ Delete restock order
    √ Get all restock order
    √ Dropping table
    √ Adding a new restock order
    √ Adding a new restock order
    √ Adding a new restock order
    √ Updating the state of a restock order
    √ Update transportNote of a restock order
    √ Updating the state of a restock order
    √ Update skuItems of a restock order
    √ Updating the state of a restock order
    √ Update transportNote of a restock order
    √ Get all restock order
    √ Updating the state of a restock order
    √ Get list of returnable items of a restock order (by id)
    √ Get list of returnable items of a restock order (by id)
    √ Get list of returnable items of a restock order (by id)

  test return order apis
    √ Dropping table
    √ Adding a new return order
    √ Adding a new return order
    √ Adding a new return order
    √ Adding a new return order
    √ Adding a new return order
    √ Get a return order (by id)
    √ Get a return order (by id)
    √ Get a return order (by id)
    √ Delete return order
    √ Delete return order
    √ Dropping table
    √ Adding a new return order
    √ Adding a new return order
    √ Adding a new return order
    √ Delete return order
    √ Get all return orders
    √ Dropping table
    √ Adding a new return order
    √ Adding a new return order
    √ Get all return orders

  Test skuitem APIs
    √ Deleting data (Not official API)
    √ Deleting data (Not official API)
    √ POST /api/sku
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ POST /api/skuitem
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ PUT /api/skuitems/:rfid
    √ GET /api/skuitems
    √ GET /api/skuitems/:rfid
    √ GET /api/skuitems/:rfid
    √ GET /api/skuitems/:rfid
    √ GET /api/skuitems/sku/:id
    √ GET /api/skuitems/sku/:id
    √ GET /api/skuitems/sku/:id
    √ DELETE /api/skuitems/:rfid
    √ DELETE /api/skuitems/:rfid
    √ GET /api/skuitems/:rfid

  Test sku APIs
    √ Deleting data (Not official API)
    √ Deleting data (Not official API)
    √ Dropping table
    √ POST /api/position
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ POST /api/sku
    √ PUT /api/sku/:id/position
    √ PUT /api/sku/:id
    √ PUT /api/sku/:id
    √ PUT /api/sku/:id
    √ PUT /api/sku/:id
    √ PUT /api/sku/:id/position
    √ PUT /api/sku/:id/position
    √ PUT /api/sku/:id/position
    √ PUT /api/sku/:id
    √ Adding a new test
    √ Adding a new test
    √ Adding a new test
    √ GET /api/skus
    √ GET /api/skus/:id
    √ GET /api/skus/:id
    √ DELETE /api/skus/:id
    √ DELETE /api/skus/:id
    √ GET /api/skus/:id

  test testDescriptor apis
    √ Dropping table
    6) Adding a new test
    7) Adding a new test
    √ Adding a new test
    √ Adding a new test
    8) Get a all tests
    9) Get a test
    √ Get a test
    10) Modifying a test
    11) Modifying a test

  test testResults apis
    √ Dropping table
    12) Adding a new result
    √ Adding a new result
    √ Adding a new result
    13) Get a result
    14) Get a result
    15) Modifying a result
    √ Modifying a result

  Test user APIs
    √ Deleting all users (Not official API)
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newUser
    √ POST /api/newManager (Not official API - Used for testing managerSessions)
    √ GET /api/suppliers
    √ GET /api/users
    √ POST /api/managerSessions
    √ POST /api/managerSessions
    √ POST /api/managerSessions
    √ POST /api/managerSessions
    √ POST /api/managerSessions
    √ POST /api/customerSessions
    √ POST /api/customerSessions
    √ POST /api/customerSessions
    √ POST /api/customerSessions
    √ POST /api/customerSessions
    √ POST /api/supplierSessions
    √ POST /api/supplierSessions
    √ POST /api/supplierSessions
    √ POST /api/supplierSessions
    √ POST /api/supplierSessions
    √ POST /api/clerkSessions
    √ POST /api/clerkSessions
    √ POST /api/clerkSessions
    √ POST /api/clerkSessions
    √ POST /api/clerkSessions
    √ POST /api/qualityEmployeeSessions
    √ POST /api/qualityEmployeeSessions
    √ POST /api/qualityEmployeeSessions
    √ POST /api/qualityEmployeeSessions
    √ POST /api/qualityEmployeeSessions
    √ POST /api/deliveryEmployeeSessions
    √ POST /api/deliveryEmployeeSessions
    √ POST /api/deliveryEmployeeSessions
    √ POST /api/deliveryEmployeeSessions
    √ POST /api/deliveryEmployeeSessions
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ PUT /api/users/:username
    √ DELETE /api/users/:username/:type
    √ DELETE /api/users/:username/:type
    √ DELETE /api/users/:username/:type
    √ DELETE /api/users/:username/:type
    √ DELETE /api/users/:username/:type


  269 passing (31s)
  15 failing

  1) Test internalOrder APIs
       POST /api/internalOrders:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testInternalOrderRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  2) Test internalOrder APIs
       POST /api/internalOrders:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testInternalOrderRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  3) Test internalOrder APIs
       POST /api/internalOrders:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testInternalOrderRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  4) Test internalOrder APIs
       POST /api/internalOrders:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testInternalOrderRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  5) Test internalOrder APIs
       PUT /api/internalOrders/:id:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testInternalOrderRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  6) test testDescriptor apis
       Adding a new test:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestDescriptorRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  7) test testDescriptor apis
       Adding a new test:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestDescriptorRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  8) test testDescriptor apis
       Get a all tests:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestDescriptorRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  9) test testDescriptor apis
       Get a test:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestDescriptorRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  10) test testDescriptor apis
       Modifying a test:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestDescriptorRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  11) test testDescriptor apis
       Modifying a test:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestDescriptorRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  12) test testResults apis
       Adding a new result:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestResultRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  13) test testResults apis
       Get a result:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestResultRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  14) test testResults apis
       Get a result:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestResultRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)

  15) test testResults apis
       Modifying a result:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\aless\Desktop\SE_PROJECT\EzWh\code\server\test\testTestResultRoutes.js)
      at listOnTimeout (internal/timers.js:557:17)
      at processTimers (internal/timers.js:500:7)



